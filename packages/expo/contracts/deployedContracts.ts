/**
 * This file is autogenerated by ETH Mobile.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from '@/utils/eth-mobile/contract';

const deployedContracts = {
  11155111: {
    AccessoryManager: {
      address: '0x28acebbC6fF0C10Cb45f9fa5E58D4d268a3EC278',
      abi: [
        {
          inputs: [],
          name: 'Snowman__AccessoryNotWorn',
          type: 'error'
        },
        {
          inputs: [],
          name: 'Snowman__NotOwner',
          type: 'error'
        },
        {
          inputs: [],
          name: 'Snowman__UnavailableAccessory',
          type: 'error'
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: 'address[]',
              name: 'accessories',
              type: 'address[]'
            }
          ],
          name: 'AccessoriesAdded',
          type: 'event'
        },
        {
          anonymous: false,
          inputs: [
            {
              components: [
                {
                  internalType: 'address',
                  name: '_address',
                  type: 'address'
                },
                {
                  internalType: 'enum DataTypes.AccessoryPosition',
                  name: 'position',
                  type: 'uint8'
                }
              ],
              indexed: false,
              internalType: 'struct DataTypes.Accessory[]',
              name: 'accessories',
              type: 'tuple[]'
            },
            {
              indexed: false,
              internalType: 'uint256',
              name: 'snowmanId',
              type: 'uint256'
            }
          ],
          name: 'AccessoriesRemoved',
          type: 'event'
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: 'address',
              name: 'accessory',
              type: 'address'
            }
          ],
          name: 'AccessoryAdded',
          type: 'event'
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: 'address',
              name: 'accessory',
              type: 'address'
            },
            {
              indexed: false,
              internalType: 'uint256',
              name: 'snowmanId',
              type: 'uint256'
            }
          ],
          name: 'AccessoryRemoved',
          type: 'event'
        }
      ],
      inheritedFunctions: {}
    },
    AttributesGen: {
      address: '0x5CeF0301F0df7dfb8673058987037F5076eE7561',
      abi: [
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'min',
              type: 'uint256'
            },
            {
              internalType: 'uint256',
              name: 'max',
              type: 'uint256'
            }
          ],
          name: 'PRNG__InvalidRange',
          type: 'error'
        }
      ],
      inheritedFunctions: {}
    },
    Belt: {
      address: '0x7Ae9248865eD37189fd8BaD5002B6cc6D9401AeD',
      abi: [
        {
          inputs: [
            {
              internalType: 'address',
              name: 'feeCollector',
              type: 'address'
            }
          ],
          stateMutability: 'nonpayable',
          type: 'constructor'
        },
        {
          inputs: [],
          name: 'Belt__InvalidFeeCollector',
          type: 'error'
        },
        {
          inputs: [],
          name: 'Belt__InvalidMintFee',
          type: 'error'
        },
        {
          inputs: [],
          name: 'Belt__NoFeesAvailable',
          type: 'error'
        },
        {
          inputs: [],
          name: 'Belt__NotFeeCollector',
          type: 'error'
        },
        {
          inputs: [],
          name: 'Belt__NotMinted',
          type: 'error'
        },
        {
          inputs: [],
          name: 'Belt__TransferFailed',
          type: 'error'
        },
        {
          inputs: [],
          name: 'Belt__ZeroAddress',
          type: 'error'
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'min',
              type: 'uint256'
            },
            {
              internalType: 'uint256',
              name: 'max',
              type: 'uint256'
            }
          ],
          name: 'PRNG__InvalidRange',
          type: 'error'
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: 'address',
              name: 'owner',
              type: 'address'
            },
            {
              indexed: true,
              internalType: 'address',
              name: 'approved',
              type: 'address'
            },
            {
              indexed: true,
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256'
            }
          ],
          name: 'Approval',
          type: 'event'
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: 'address',
              name: 'owner',
              type: 'address'
            },
            {
              indexed: true,
              internalType: 'address',
              name: 'operator',
              type: 'address'
            },
            {
              indexed: false,
              internalType: 'bool',
              name: 'approved',
              type: 'bool'
            }
          ],
          name: 'ApprovalForAll',
          type: 'event'
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: 'address',
              name: 'oldFeeCollector',
              type: 'address'
            },
            {
              indexed: false,
              internalType: 'address',
              name: 'newFeeCollector',
              type: 'address'
            }
          ],
          name: 'FeeCollectorChanged',
          type: 'event'
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: 'address',
              name: 'feeCollector',
              type: 'address'
            },
            {
              indexed: false,
              internalType: 'uint256',
              name: 'amount',
              type: 'uint256'
            }
          ],
          name: 'FeesWithdrawn',
          type: 'event'
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: 'address',
              name: 'previousOwner',
              type: 'address'
            },
            {
              indexed: true,
              internalType: 'address',
              name: 'newOwner',
              type: 'address'
            }
          ],
          name: 'OwnershipTransferred',
          type: 'event'
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: 'address',
              name: 'from',
              type: 'address'
            },
            {
              indexed: true,
              internalType: 'address',
              name: 'to',
              type: 'address'
            },
            {
              indexed: true,
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256'
            }
          ],
          name: 'Transfer',
          type: 'event'
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'to',
              type: 'address'
            },
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256'
            }
          ],
          name: 'approve',
          outputs: [],
          stateMutability: 'nonpayable',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'owner',
              type: 'address'
            }
          ],
          name: 'balanceOf',
          outputs: [
            {
              internalType: 'uint256',
              name: '',
              type: 'uint256'
            }
          ],
          stateMutability: 'view',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256'
            }
          ],
          name: 'getApproved',
          outputs: [
            {
              internalType: 'address',
              name: '',
              type: 'address'
            }
          ],
          stateMutability: 'view',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256'
            }
          ],
          name: 'getAttributes',
          outputs: [
            {
              components: [
                {
                  internalType: 'string',
                  name: 'color',
                  type: 'string'
                }
              ],
              internalType: 'struct DataTypes.Belt',
              name: '',
              type: 'tuple'
            }
          ],
          stateMutability: 'view',
          type: 'function'
        },
        {
          inputs: [],
          name: 'getFeeCollector',
          outputs: [
            {
              internalType: 'address',
              name: '',
              type: 'address'
            }
          ],
          stateMutability: 'view',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'owner',
              type: 'address'
            },
            {
              internalType: 'address',
              name: 'operator',
              type: 'address'
            }
          ],
          name: 'isApprovedForAll',
          outputs: [
            {
              internalType: 'bool',
              name: '',
              type: 'bool'
            }
          ],
          stateMutability: 'view',
          type: 'function'
        },
        {
          inputs: [],
          name: 'mint',
          outputs: [
            {
              internalType: 'uint256',
              name: '',
              type: 'uint256'
            }
          ],
          stateMutability: 'payable',
          type: 'function'
        },
        {
          inputs: [],
          name: 'name',
          outputs: [
            {
              internalType: 'string',
              name: '',
              type: 'string'
            }
          ],
          stateMutability: 'view',
          type: 'function'
        },
        {
          inputs: [],
          name: 'owner',
          outputs: [
            {
              internalType: 'address',
              name: '',
              type: 'address'
            }
          ],
          stateMutability: 'view',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256'
            }
          ],
          name: 'ownerOf',
          outputs: [
            {
              internalType: 'address',
              name: '',
              type: 'address'
            }
          ],
          stateMutability: 'view',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256'
            }
          ],
          name: 'renderTokenById',
          outputs: [
            {
              internalType: 'string',
              name: '',
              type: 'string'
            }
          ],
          stateMutability: 'view',
          type: 'function'
        },
        {
          inputs: [],
          name: 'renounceOwnership',
          outputs: [],
          stateMutability: 'nonpayable',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'from',
              type: 'address'
            },
            {
              internalType: 'address',
              name: 'to',
              type: 'address'
            },
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256'
            }
          ],
          name: 'safeTransferFrom',
          outputs: [],
          stateMutability: 'nonpayable',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'from',
              type: 'address'
            },
            {
              internalType: 'address',
              name: 'to',
              type: 'address'
            },
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256'
            },
            {
              internalType: 'bytes',
              name: 'data',
              type: 'bytes'
            }
          ],
          name: 'safeTransferFrom',
          outputs: [],
          stateMutability: 'nonpayable',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'operator',
              type: 'address'
            },
            {
              internalType: 'bool',
              name: 'approved',
              type: 'bool'
            }
          ],
          name: 'setApprovalForAll',
          outputs: [],
          stateMutability: 'nonpayable',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'newFeeCollector',
              type: 'address'
            }
          ],
          name: 'setFeeCollector',
          outputs: [],
          stateMutability: 'nonpayable',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'bytes4',
              name: 'interfaceId',
              type: 'bytes4'
            }
          ],
          name: 'supportsInterface',
          outputs: [
            {
              internalType: 'bool',
              name: '',
              type: 'bool'
            }
          ],
          stateMutability: 'view',
          type: 'function'
        },
        {
          inputs: [],
          name: 'symbol',
          outputs: [
            {
              internalType: 'string',
              name: '',
              type: 'string'
            }
          ],
          stateMutability: 'view',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'index',
              type: 'uint256'
            }
          ],
          name: 'tokenByIndex',
          outputs: [
            {
              internalType: 'uint256',
              name: '',
              type: 'uint256'
            }
          ],
          stateMutability: 'view',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'owner',
              type: 'address'
            },
            {
              internalType: 'uint256',
              name: 'index',
              type: 'uint256'
            }
          ],
          name: 'tokenOfOwnerByIndex',
          outputs: [
            {
              internalType: 'uint256',
              name: '',
              type: 'uint256'
            }
          ],
          stateMutability: 'view',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256'
            }
          ],
          name: 'tokenURI',
          outputs: [
            {
              internalType: 'string',
              name: '',
              type: 'string'
            }
          ],
          stateMutability: 'view',
          type: 'function'
        },
        {
          inputs: [],
          name: 'totalSupply',
          outputs: [
            {
              internalType: 'uint256',
              name: '',
              type: 'uint256'
            }
          ],
          stateMutability: 'view',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'from',
              type: 'address'
            },
            {
              internalType: 'address',
              name: 'to',
              type: 'address'
            },
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256'
            }
          ],
          name: 'transferFrom',
          outputs: [],
          stateMutability: 'nonpayable',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'newOwner',
              type: 'address'
            }
          ],
          name: 'transferOwnership',
          outputs: [],
          stateMutability: 'nonpayable',
          type: 'function'
        },
        {
          inputs: [],
          name: 'withdrawFees',
          outputs: [],
          stateMutability: 'nonpayable',
          type: 'function'
        }
      ],
      inheritedFunctions: {
        approve:
          '@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol',
        balanceOf:
          '@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol',
        getApproved:
          '@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol',
        isApprovedForAll:
          '@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol',
        name: '@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol',
        ownerOf:
          '@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol',
        safeTransferFrom:
          '@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol',
        setApprovalForAll:
          '@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol',
        supportsInterface:
          '@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol',
        symbol:
          '@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol',
        tokenByIndex:
          '@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol',
        tokenOfOwnerByIndex:
          '@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol',
        tokenURI:
          '@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol',
        totalSupply:
          '@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol',
        transferFrom:
          '@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol',
        owner: '@openzeppelin/contracts/access/Ownable.sol',
        renounceOwnership: '@openzeppelin/contracts/access/Ownable.sol',
        transferOwnership: '@openzeppelin/contracts/access/Ownable.sol'
      }
    },
    BeltMetadata: {
      address: '0x6775355F9554AEC4c29907678FDAc4833e3bA26D',
      abi: [
        {
          inputs: [
            {
              components: [
                {
                  internalType: 'string',
                  name: 'color',
                  type: 'string'
                }
              ],
              internalType: 'struct DataTypes.Belt',
              name: 'belt',
              type: 'tuple'
            }
          ],
          name: 'renderTokenById',
          outputs: [
            {
              internalType: 'string',
              name: '',
              type: 'string'
            }
          ],
          stateMutability: 'pure',
          type: 'function'
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: 'string',
                  name: 'color',
                  type: 'string'
                }
              ],
              internalType: 'struct DataTypes.Belt',
              name: 'belt',
              type: 'tuple'
            },
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256'
            }
          ],
          name: 'tokenURI',
          outputs: [
            {
              internalType: 'string',
              name: '',
              type: 'string'
            }
          ],
          stateMutability: 'pure',
          type: 'function'
        }
      ],
      inheritedFunctions: {}
    },
    Hat: {
      address: '0xC7cbb2025aC104b1Ad5c05a76f113d0F37919Cda',
      abi: [
        {
          inputs: [
            {
              internalType: 'address',
              name: 'feeCollector',
              type: 'address'
            }
          ],
          stateMutability: 'nonpayable',
          type: 'constructor'
        },
        {
          inputs: [],
          name: 'Hat__InvalidFeeCollector',
          type: 'error'
        },
        {
          inputs: [],
          name: 'Hat__InvalidMintFee',
          type: 'error'
        },
        {
          inputs: [],
          name: 'Hat__NoFeesAvailable',
          type: 'error'
        },
        {
          inputs: [],
          name: 'Hat__NotFeeCollector',
          type: 'error'
        },
        {
          inputs: [],
          name: 'Hat__NotMinted',
          type: 'error'
        },
        {
          inputs: [],
          name: 'Hat__TransferFailed',
          type: 'error'
        },
        {
          inputs: [],
          name: 'Hat__ZeroAddress',
          type: 'error'
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'min',
              type: 'uint256'
            },
            {
              internalType: 'uint256',
              name: 'max',
              type: 'uint256'
            }
          ],
          name: 'PRNG__InvalidRange',
          type: 'error'
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: 'address',
              name: 'owner',
              type: 'address'
            },
            {
              indexed: true,
              internalType: 'address',
              name: 'approved',
              type: 'address'
            },
            {
              indexed: true,
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256'
            }
          ],
          name: 'Approval',
          type: 'event'
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: 'address',
              name: 'owner',
              type: 'address'
            },
            {
              indexed: true,
              internalType: 'address',
              name: 'operator',
              type: 'address'
            },
            {
              indexed: false,
              internalType: 'bool',
              name: 'approved',
              type: 'bool'
            }
          ],
          name: 'ApprovalForAll',
          type: 'event'
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: 'address',
              name: 'oldFeeCollector',
              type: 'address'
            },
            {
              indexed: false,
              internalType: 'address',
              name: 'newFeeCollector',
              type: 'address'
            }
          ],
          name: 'FeeCollectorChanged',
          type: 'event'
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: 'address',
              name: 'feeCollector',
              type: 'address'
            },
            {
              indexed: false,
              internalType: 'uint256',
              name: 'amount',
              type: 'uint256'
            }
          ],
          name: 'FeesWithdrawn',
          type: 'event'
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: 'address',
              name: 'previousOwner',
              type: 'address'
            },
            {
              indexed: true,
              internalType: 'address',
              name: 'newOwner',
              type: 'address'
            }
          ],
          name: 'OwnershipTransferred',
          type: 'event'
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: 'address',
              name: 'from',
              type: 'address'
            },
            {
              indexed: true,
              internalType: 'address',
              name: 'to',
              type: 'address'
            },
            {
              indexed: true,
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256'
            }
          ],
          name: 'Transfer',
          type: 'event'
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'to',
              type: 'address'
            },
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256'
            }
          ],
          name: 'approve',
          outputs: [],
          stateMutability: 'nonpayable',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'owner',
              type: 'address'
            }
          ],
          name: 'balanceOf',
          outputs: [
            {
              internalType: 'uint256',
              name: '',
              type: 'uint256'
            }
          ],
          stateMutability: 'view',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256'
            }
          ],
          name: 'getApproved',
          outputs: [
            {
              internalType: 'address',
              name: '',
              type: 'address'
            }
          ],
          stateMutability: 'view',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256'
            }
          ],
          name: 'getAttributes',
          outputs: [
            {
              components: [
                {
                  internalType: 'string',
                  name: 'color',
                  type: 'string'
                }
              ],
              internalType: 'struct DataTypes.Hat',
              name: '',
              type: 'tuple'
            }
          ],
          stateMutability: 'view',
          type: 'function'
        },
        {
          inputs: [],
          name: 'getFeeCollector',
          outputs: [
            {
              internalType: 'address',
              name: '',
              type: 'address'
            }
          ],
          stateMutability: 'view',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'owner',
              type: 'address'
            },
            {
              internalType: 'address',
              name: 'operator',
              type: 'address'
            }
          ],
          name: 'isApprovedForAll',
          outputs: [
            {
              internalType: 'bool',
              name: '',
              type: 'bool'
            }
          ],
          stateMutability: 'view',
          type: 'function'
        },
        {
          inputs: [],
          name: 'mint',
          outputs: [
            {
              internalType: 'uint256',
              name: '',
              type: 'uint256'
            }
          ],
          stateMutability: 'payable',
          type: 'function'
        },
        {
          inputs: [],
          name: 'name',
          outputs: [
            {
              internalType: 'string',
              name: '',
              type: 'string'
            }
          ],
          stateMutability: 'view',
          type: 'function'
        },
        {
          inputs: [],
          name: 'owner',
          outputs: [
            {
              internalType: 'address',
              name: '',
              type: 'address'
            }
          ],
          stateMutability: 'view',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256'
            }
          ],
          name: 'ownerOf',
          outputs: [
            {
              internalType: 'address',
              name: '',
              type: 'address'
            }
          ],
          stateMutability: 'view',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256'
            }
          ],
          name: 'renderTokenById',
          outputs: [
            {
              internalType: 'string',
              name: '',
              type: 'string'
            }
          ],
          stateMutability: 'view',
          type: 'function'
        },
        {
          inputs: [],
          name: 'renounceOwnership',
          outputs: [],
          stateMutability: 'nonpayable',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'from',
              type: 'address'
            },
            {
              internalType: 'address',
              name: 'to',
              type: 'address'
            },
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256'
            }
          ],
          name: 'safeTransferFrom',
          outputs: [],
          stateMutability: 'nonpayable',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'from',
              type: 'address'
            },
            {
              internalType: 'address',
              name: 'to',
              type: 'address'
            },
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256'
            },
            {
              internalType: 'bytes',
              name: 'data',
              type: 'bytes'
            }
          ],
          name: 'safeTransferFrom',
          outputs: [],
          stateMutability: 'nonpayable',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'operator',
              type: 'address'
            },
            {
              internalType: 'bool',
              name: 'approved',
              type: 'bool'
            }
          ],
          name: 'setApprovalForAll',
          outputs: [],
          stateMutability: 'nonpayable',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'newFeeCollector',
              type: 'address'
            }
          ],
          name: 'setFeeCollector',
          outputs: [],
          stateMutability: 'nonpayable',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'bytes4',
              name: 'interfaceId',
              type: 'bytes4'
            }
          ],
          name: 'supportsInterface',
          outputs: [
            {
              internalType: 'bool',
              name: '',
              type: 'bool'
            }
          ],
          stateMutability: 'view',
          type: 'function'
        },
        {
          inputs: [],
          name: 'symbol',
          outputs: [
            {
              internalType: 'string',
              name: '',
              type: 'string'
            }
          ],
          stateMutability: 'view',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'index',
              type: 'uint256'
            }
          ],
          name: 'tokenByIndex',
          outputs: [
            {
              internalType: 'uint256',
              name: '',
              type: 'uint256'
            }
          ],
          stateMutability: 'view',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'owner',
              type: 'address'
            },
            {
              internalType: 'uint256',
              name: 'index',
              type: 'uint256'
            }
          ],
          name: 'tokenOfOwnerByIndex',
          outputs: [
            {
              internalType: 'uint256',
              name: '',
              type: 'uint256'
            }
          ],
          stateMutability: 'view',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256'
            }
          ],
          name: 'tokenURI',
          outputs: [
            {
              internalType: 'string',
              name: '',
              type: 'string'
            }
          ],
          stateMutability: 'view',
          type: 'function'
        },
        {
          inputs: [],
          name: 'totalSupply',
          outputs: [
            {
              internalType: 'uint256',
              name: '',
              type: 'uint256'
            }
          ],
          stateMutability: 'view',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'from',
              type: 'address'
            },
            {
              internalType: 'address',
              name: 'to',
              type: 'address'
            },
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256'
            }
          ],
          name: 'transferFrom',
          outputs: [],
          stateMutability: 'nonpayable',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'newOwner',
              type: 'address'
            }
          ],
          name: 'transferOwnership',
          outputs: [],
          stateMutability: 'nonpayable',
          type: 'function'
        },
        {
          inputs: [],
          name: 'withdrawFees',
          outputs: [],
          stateMutability: 'nonpayable',
          type: 'function'
        }
      ],
      inheritedFunctions: {
        approve:
          '@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol',
        balanceOf:
          '@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol',
        getApproved:
          '@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol',
        isApprovedForAll:
          '@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol',
        name: '@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol',
        ownerOf:
          '@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol',
        safeTransferFrom:
          '@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol',
        setApprovalForAll:
          '@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol',
        supportsInterface:
          '@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol',
        symbol:
          '@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol',
        tokenByIndex:
          '@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol',
        tokenOfOwnerByIndex:
          '@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol',
        tokenURI:
          '@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol',
        totalSupply:
          '@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol',
        transferFrom:
          '@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol',
        owner: '@openzeppelin/contracts/access/Ownable.sol',
        renounceOwnership: '@openzeppelin/contracts/access/Ownable.sol',
        transferOwnership: '@openzeppelin/contracts/access/Ownable.sol'
      }
    },
    HatMetadata: {
      address: '0x106F0131f0d6fC5D02798303996ed47D2c9a104C',
      abi: [
        {
          inputs: [
            {
              components: [
                {
                  internalType: 'string',
                  name: 'color',
                  type: 'string'
                }
              ],
              internalType: 'struct DataTypes.Hat',
              name: 'hat',
              type: 'tuple'
            }
          ],
          name: 'renderTokenById',
          outputs: [
            {
              internalType: 'string',
              name: '',
              type: 'string'
            }
          ],
          stateMutability: 'pure',
          type: 'function'
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: 'string',
                  name: 'color',
                  type: 'string'
                }
              ],
              internalType: 'struct DataTypes.Hat',
              name: 'hat',
              type: 'tuple'
            },
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256'
            }
          ],
          name: 'tokenURI',
          outputs: [
            {
              internalType: 'string',
              name: '',
              type: 'string'
            }
          ],
          stateMutability: 'pure',
          type: 'function'
        }
      ],
      inheritedFunctions: {}
    },
    Scarf: {
      address: '0x1CdCdFaA4bD0c7f083b36b53DE3343c8220722Ee',
      abi: [
        {
          inputs: [
            {
              internalType: 'address',
              name: 'feeCollector',
              type: 'address'
            }
          ],
          stateMutability: 'nonpayable',
          type: 'constructor'
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'min',
              type: 'uint256'
            },
            {
              internalType: 'uint256',
              name: 'max',
              type: 'uint256'
            }
          ],
          name: 'PRNG__InvalidRange',
          type: 'error'
        },
        {
          inputs: [],
          name: 'Scarf__InvalidFeeCollector',
          type: 'error'
        },
        {
          inputs: [],
          name: 'Scarf__InvalidMintFee',
          type: 'error'
        },
        {
          inputs: [],
          name: 'Scarf__NoFeesAvailable',
          type: 'error'
        },
        {
          inputs: [],
          name: 'Scarf__NotFeeCollector',
          type: 'error'
        },
        {
          inputs: [],
          name: 'Scarf__NotMinted',
          type: 'error'
        },
        {
          inputs: [],
          name: 'Scarf__TransferFailed',
          type: 'error'
        },
        {
          inputs: [],
          name: 'Scarf__ZeroAddress',
          type: 'error'
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: 'address',
              name: 'owner',
              type: 'address'
            },
            {
              indexed: true,
              internalType: 'address',
              name: 'approved',
              type: 'address'
            },
            {
              indexed: true,
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256'
            }
          ],
          name: 'Approval',
          type: 'event'
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: 'address',
              name: 'owner',
              type: 'address'
            },
            {
              indexed: true,
              internalType: 'address',
              name: 'operator',
              type: 'address'
            },
            {
              indexed: false,
              internalType: 'bool',
              name: 'approved',
              type: 'bool'
            }
          ],
          name: 'ApprovalForAll',
          type: 'event'
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: 'address',
              name: 'oldFeeCollector',
              type: 'address'
            },
            {
              indexed: false,
              internalType: 'address',
              name: 'newFeeCollector',
              type: 'address'
            }
          ],
          name: 'FeeCollectorChanged',
          type: 'event'
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: 'address',
              name: 'feeCollector',
              type: 'address'
            },
            {
              indexed: false,
              internalType: 'uint256',
              name: 'amount',
              type: 'uint256'
            }
          ],
          name: 'FeesWithdrawn',
          type: 'event'
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: 'address',
              name: 'previousOwner',
              type: 'address'
            },
            {
              indexed: true,
              internalType: 'address',
              name: 'newOwner',
              type: 'address'
            }
          ],
          name: 'OwnershipTransferred',
          type: 'event'
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: 'address',
              name: 'from',
              type: 'address'
            },
            {
              indexed: true,
              internalType: 'address',
              name: 'to',
              type: 'address'
            },
            {
              indexed: true,
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256'
            }
          ],
          name: 'Transfer',
          type: 'event'
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'to',
              type: 'address'
            },
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256'
            }
          ],
          name: 'approve',
          outputs: [],
          stateMutability: 'nonpayable',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'owner',
              type: 'address'
            }
          ],
          name: 'balanceOf',
          outputs: [
            {
              internalType: 'uint256',
              name: '',
              type: 'uint256'
            }
          ],
          stateMutability: 'view',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256'
            }
          ],
          name: 'getApproved',
          outputs: [
            {
              internalType: 'address',
              name: '',
              type: 'address'
            }
          ],
          stateMutability: 'view',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256'
            }
          ],
          name: 'getAttributes',
          outputs: [
            {
              components: [
                {
                  internalType: 'string',
                  name: 'color',
                  type: 'string'
                }
              ],
              internalType: 'struct DataTypes.Scarf',
              name: '',
              type: 'tuple'
            }
          ],
          stateMutability: 'view',
          type: 'function'
        },
        {
          inputs: [],
          name: 'getFeeCollector',
          outputs: [
            {
              internalType: 'address',
              name: '',
              type: 'address'
            }
          ],
          stateMutability: 'view',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'owner',
              type: 'address'
            },
            {
              internalType: 'address',
              name: 'operator',
              type: 'address'
            }
          ],
          name: 'isApprovedForAll',
          outputs: [
            {
              internalType: 'bool',
              name: '',
              type: 'bool'
            }
          ],
          stateMutability: 'view',
          type: 'function'
        },
        {
          inputs: [],
          name: 'mint',
          outputs: [
            {
              internalType: 'uint256',
              name: '',
              type: 'uint256'
            }
          ],
          stateMutability: 'payable',
          type: 'function'
        },
        {
          inputs: [],
          name: 'name',
          outputs: [
            {
              internalType: 'string',
              name: '',
              type: 'string'
            }
          ],
          stateMutability: 'view',
          type: 'function'
        },
        {
          inputs: [],
          name: 'owner',
          outputs: [
            {
              internalType: 'address',
              name: '',
              type: 'address'
            }
          ],
          stateMutability: 'view',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256'
            }
          ],
          name: 'ownerOf',
          outputs: [
            {
              internalType: 'address',
              name: '',
              type: 'address'
            }
          ],
          stateMutability: 'view',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256'
            }
          ],
          name: 'renderTokenById',
          outputs: [
            {
              internalType: 'string',
              name: '',
              type: 'string'
            }
          ],
          stateMutability: 'view',
          type: 'function'
        },
        {
          inputs: [],
          name: 'renounceOwnership',
          outputs: [],
          stateMutability: 'nonpayable',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'from',
              type: 'address'
            },
            {
              internalType: 'address',
              name: 'to',
              type: 'address'
            },
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256'
            }
          ],
          name: 'safeTransferFrom',
          outputs: [],
          stateMutability: 'nonpayable',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'from',
              type: 'address'
            },
            {
              internalType: 'address',
              name: 'to',
              type: 'address'
            },
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256'
            },
            {
              internalType: 'bytes',
              name: 'data',
              type: 'bytes'
            }
          ],
          name: 'safeTransferFrom',
          outputs: [],
          stateMutability: 'nonpayable',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'operator',
              type: 'address'
            },
            {
              internalType: 'bool',
              name: 'approved',
              type: 'bool'
            }
          ],
          name: 'setApprovalForAll',
          outputs: [],
          stateMutability: 'nonpayable',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'newFeeCollector',
              type: 'address'
            }
          ],
          name: 'setFeeCollector',
          outputs: [],
          stateMutability: 'nonpayable',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'bytes4',
              name: 'interfaceId',
              type: 'bytes4'
            }
          ],
          name: 'supportsInterface',
          outputs: [
            {
              internalType: 'bool',
              name: '',
              type: 'bool'
            }
          ],
          stateMutability: 'view',
          type: 'function'
        },
        {
          inputs: [],
          name: 'symbol',
          outputs: [
            {
              internalType: 'string',
              name: '',
              type: 'string'
            }
          ],
          stateMutability: 'view',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'index',
              type: 'uint256'
            }
          ],
          name: 'tokenByIndex',
          outputs: [
            {
              internalType: 'uint256',
              name: '',
              type: 'uint256'
            }
          ],
          stateMutability: 'view',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'owner',
              type: 'address'
            },
            {
              internalType: 'uint256',
              name: 'index',
              type: 'uint256'
            }
          ],
          name: 'tokenOfOwnerByIndex',
          outputs: [
            {
              internalType: 'uint256',
              name: '',
              type: 'uint256'
            }
          ],
          stateMutability: 'view',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256'
            }
          ],
          name: 'tokenURI',
          outputs: [
            {
              internalType: 'string',
              name: '',
              type: 'string'
            }
          ],
          stateMutability: 'view',
          type: 'function'
        },
        {
          inputs: [],
          name: 'totalSupply',
          outputs: [
            {
              internalType: 'uint256',
              name: '',
              type: 'uint256'
            }
          ],
          stateMutability: 'view',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'from',
              type: 'address'
            },
            {
              internalType: 'address',
              name: 'to',
              type: 'address'
            },
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256'
            }
          ],
          name: 'transferFrom',
          outputs: [],
          stateMutability: 'nonpayable',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'newOwner',
              type: 'address'
            }
          ],
          name: 'transferOwnership',
          outputs: [],
          stateMutability: 'nonpayable',
          type: 'function'
        },
        {
          inputs: [],
          name: 'withdrawFees',
          outputs: [],
          stateMutability: 'nonpayable',
          type: 'function'
        }
      ],
      inheritedFunctions: {
        approve:
          '@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol',
        balanceOf:
          '@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol',
        getApproved:
          '@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol',
        isApprovedForAll:
          '@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol',
        name: '@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol',
        ownerOf:
          '@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol',
        safeTransferFrom:
          '@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol',
        setApprovalForAll:
          '@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol',
        supportsInterface:
          '@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol',
        symbol:
          '@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol',
        tokenByIndex:
          '@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol',
        tokenOfOwnerByIndex:
          '@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol',
        tokenURI:
          '@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol',
        totalSupply:
          '@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol',
        transferFrom:
          '@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol',
        owner: '@openzeppelin/contracts/access/Ownable.sol',
        renounceOwnership: '@openzeppelin/contracts/access/Ownable.sol',
        transferOwnership: '@openzeppelin/contracts/access/Ownable.sol'
      }
    },
    ScarfMetadata: {
      address: '0xBb9ee01500F42F30183b6dbEe882148C6669E90a',
      abi: [
        {
          inputs: [
            {
              components: [
                {
                  internalType: 'string',
                  name: 'color',
                  type: 'string'
                }
              ],
              internalType: 'struct DataTypes.Scarf',
              name: 'scarf',
              type: 'tuple'
            }
          ],
          name: 'renderTokenById',
          outputs: [
            {
              internalType: 'string',
              name: '',
              type: 'string'
            }
          ],
          stateMutability: 'pure',
          type: 'function'
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: 'string',
                  name: 'color',
                  type: 'string'
                }
              ],
              internalType: 'struct DataTypes.Scarf',
              name: 'scarf',
              type: 'tuple'
            },
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256'
            }
          ],
          name: 'tokenURI',
          outputs: [
            {
              internalType: 'string',
              name: '',
              type: 'string'
            }
          ],
          stateMutability: 'pure',
          type: 'function'
        }
      ],
      inheritedFunctions: {}
    },
    Snowman: {
      address: '0x67Bd941a3BCfCE1b7436Ec680B495Da7b2330825',
      abi: [
        {
          inputs: [],
          stateMutability: 'nonpayable',
          type: 'constructor'
        },
        {
          inputs: [],
          name: 'Snowman__AcccessoryAlreadyExists',
          type: 'error'
        },
        {
          inputs: [],
          name: 'Snowman__AccessoriesCountMismatch',
          type: 'error'
        },
        {
          inputs: [],
          name: 'Snowman__AccessoryAlreadyWorn',
          type: 'error'
        },
        {
          inputs: [],
          name: 'Snowman__AccessoryNotWorn',
          type: 'error'
        },
        {
          inputs: [],
          name: 'Snowman__CannotWearAccessory',
          type: 'error'
        },
        {
          inputs: [],
          name: 'Snowman__NoAccessories',
          type: 'error'
        },
        {
          inputs: [],
          name: 'Snowman__NotAccessoryOwner',
          type: 'error'
        },
        {
          inputs: [],
          name: 'Snowman__NotMinted',
          type: 'error'
        },
        {
          inputs: [],
          name: 'Snowman__NotOwner',
          type: 'error'
        },
        {
          inputs: [],
          name: 'Snowman__UnavailableAccessory',
          type: 'error'
        },
        {
          inputs: [],
          name: 'TypeCast__toUint256_OutOfBounds',
          type: 'error'
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: 'address[]',
              name: 'accessories',
              type: 'address[]'
            }
          ],
          name: 'AccessoriesAdded',
          type: 'event'
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: 'address[]',
              name: 'accessories',
              type: 'address[]'
            }
          ],
          name: 'AccessoriesAdded',
          type: 'event'
        },
        {
          anonymous: false,
          inputs: [
            {
              components: [
                {
                  internalType: 'address',
                  name: '_address',
                  type: 'address'
                },
                {
                  internalType: 'enum DataTypes.AccessoryPosition',
                  name: 'position',
                  type: 'uint8'
                }
              ],
              indexed: false,
              internalType: 'struct DataTypes.Accessory[]',
              name: 'accessories',
              type: 'tuple[]'
            },
            {
              indexed: false,
              internalType: 'uint256',
              name: 'snowmanId',
              type: 'uint256'
            }
          ],
          name: 'AccessoriesRemoved',
          type: 'event'
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: 'address',
              name: 'accessory',
              type: 'address'
            }
          ],
          name: 'AccessoryAdded',
          type: 'event'
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: 'address',
              name: 'accessory',
              type: 'address'
            }
          ],
          name: 'AccessoryAdded',
          type: 'event'
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: 'address',
              name: 'accessory',
              type: 'address'
            },
            {
              indexed: false,
              internalType: 'uint256',
              name: 'snowmanId',
              type: 'uint256'
            }
          ],
          name: 'AccessoryRemoved',
          type: 'event'
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: 'address',
              name: 'owner',
              type: 'address'
            },
            {
              indexed: true,
              internalType: 'address',
              name: 'approved',
              type: 'address'
            },
            {
              indexed: true,
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256'
            }
          ],
          name: 'Approval',
          type: 'event'
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: 'address',
              name: 'owner',
              type: 'address'
            },
            {
              indexed: true,
              internalType: 'address',
              name: 'operator',
              type: 'address'
            },
            {
              indexed: false,
              internalType: 'bool',
              name: 'approved',
              type: 'bool'
            }
          ],
          name: 'ApprovalForAll',
          type: 'event'
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: 'address',
              name: 'previousOwner',
              type: 'address'
            },
            {
              indexed: true,
              internalType: 'address',
              name: 'newOwner',
              type: 'address'
            }
          ],
          name: 'OwnershipTransferred',
          type: 'event'
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: 'address',
              name: 'from',
              type: 'address'
            },
            {
              indexed: true,
              internalType: 'address',
              name: 'to',
              type: 'address'
            },
            {
              indexed: true,
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256'
            }
          ],
          name: 'Transfer',
          type: 'event'
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'accessory',
              type: 'address'
            },
            {
              internalType: 'uint256',
              name: 'snowmanId',
              type: 'uint256'
            }
          ],
          name: 'accessoryId',
          outputs: [
            {
              internalType: 'uint256',
              name: '',
              type: 'uint256'
            }
          ],
          stateMutability: 'view',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'address[]',
              name: 'accessories',
              type: 'address[]'
            },
            {
              internalType: 'enum DataTypes.AccessoryPosition[]',
              name: 'positions',
              type: 'uint8[]'
            }
          ],
          name: 'addAccessories',
          outputs: [],
          stateMutability: 'nonpayable',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'accessory',
              type: 'address'
            },
            {
              internalType: 'enum DataTypes.AccessoryPosition',
              name: 'position',
              type: 'uint8'
            }
          ],
          name: 'addAccessory',
          outputs: [],
          stateMutability: 'nonpayable',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'to',
              type: 'address'
            },
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256'
            }
          ],
          name: 'approve',
          outputs: [],
          stateMutability: 'nonpayable',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'owner',
              type: 'address'
            }
          ],
          name: 'balanceOf',
          outputs: [
            {
              internalType: 'uint256',
              name: '',
              type: 'uint256'
            }
          ],
          stateMutability: 'view',
          type: 'function'
        },
        {
          inputs: [],
          name: 'getAccessories',
          outputs: [
            {
              components: [
                {
                  internalType: 'address',
                  name: '_address',
                  type: 'address'
                },
                {
                  internalType: 'enum DataTypes.AccessoryPosition',
                  name: 'position',
                  type: 'uint8'
                }
              ],
              internalType: 'struct DataTypes.Accessory[]',
              name: '',
              type: 'tuple[]'
            }
          ],
          stateMutability: 'view',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'accessory',
              type: 'address'
            },
            {
              internalType: 'uint256',
              name: 'snowmanId',
              type: 'uint256'
            }
          ],
          name: 'getAccessoryById',
          outputs: [
            {
              internalType: 'uint256',
              name: '',
              type: 'uint256'
            }
          ],
          stateMutability: 'view',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256'
            }
          ],
          name: 'getApproved',
          outputs: [
            {
              internalType: 'address',
              name: '',
              type: 'address'
            }
          ],
          stateMutability: 'view',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'accessory',
              type: 'address'
            },
            {
              internalType: 'uint256',
              name: 'snowmanId',
              type: 'uint256'
            }
          ],
          name: 'hasAccessory',
          outputs: [
            {
              internalType: 'bool',
              name: '',
              type: 'bool'
            }
          ],
          stateMutability: 'view',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'accessory',
              type: 'address'
            }
          ],
          name: 'isAccessoryAvailable',
          outputs: [
            {
              internalType: 'bool',
              name: '',
              type: 'bool'
            }
          ],
          stateMutability: 'view',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'owner',
              type: 'address'
            },
            {
              internalType: 'address',
              name: 'operator',
              type: 'address'
            }
          ],
          name: 'isApprovedForAll',
          outputs: [
            {
              internalType: 'bool',
              name: '',
              type: 'bool'
            }
          ],
          stateMutability: 'view',
          type: 'function'
        },
        {
          inputs: [],
          name: 'mint',
          outputs: [
            {
              internalType: 'uint256',
              name: '',
              type: 'uint256'
            }
          ],
          stateMutability: 'nonpayable',
          type: 'function'
        },
        {
          inputs: [],
          name: 'name',
          outputs: [
            {
              internalType: 'string',
              name: '',
              type: 'string'
            }
          ],
          stateMutability: 'view',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'operator',
              type: 'address'
            },
            {
              internalType: 'address',
              name: 'from',
              type: 'address'
            },
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256'
            },
            {
              internalType: 'bytes',
              name: 'snowmanIdData',
              type: 'bytes'
            }
          ],
          name: 'onERC721Received',
          outputs: [
            {
              internalType: 'bytes4',
              name: '',
              type: 'bytes4'
            }
          ],
          stateMutability: 'nonpayable',
          type: 'function'
        },
        {
          inputs: [],
          name: 'owner',
          outputs: [
            {
              internalType: 'address',
              name: '',
              type: 'address'
            }
          ],
          stateMutability: 'view',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256'
            }
          ],
          name: 'ownerOf',
          outputs: [
            {
              internalType: 'address',
              name: '',
              type: 'address'
            }
          ],
          stateMutability: 'view',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'accessory',
              type: 'address'
            },
            {
              internalType: 'uint256',
              name: 'snowmanId',
              type: 'uint256'
            }
          ],
          name: 'removeAccessory',
          outputs: [],
          stateMutability: 'nonpayable',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'snowmanId',
              type: 'uint256'
            }
          ],
          name: 'removeAllAccessories',
          outputs: [],
          stateMutability: 'nonpayable',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256'
            }
          ],
          name: 'renderTokenById',
          outputs: [
            {
              internalType: 'string',
              name: '',
              type: 'string'
            }
          ],
          stateMutability: 'view',
          type: 'function'
        },
        {
          inputs: [],
          name: 'renounceOwnership',
          outputs: [],
          stateMutability: 'nonpayable',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'from',
              type: 'address'
            },
            {
              internalType: 'address',
              name: 'to',
              type: 'address'
            },
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256'
            }
          ],
          name: 'safeTransferFrom',
          outputs: [],
          stateMutability: 'nonpayable',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'from',
              type: 'address'
            },
            {
              internalType: 'address',
              name: 'to',
              type: 'address'
            },
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256'
            },
            {
              internalType: 'bytes',
              name: 'data',
              type: 'bytes'
            }
          ],
          name: 'safeTransferFrom',
          outputs: [],
          stateMutability: 'nonpayable',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'operator',
              type: 'address'
            },
            {
              internalType: 'bool',
              name: 'approved',
              type: 'bool'
            }
          ],
          name: 'setApprovalForAll',
          outputs: [],
          stateMutability: 'nonpayable',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'bytes4',
              name: 'interfaceId',
              type: 'bytes4'
            }
          ],
          name: 'supportsInterface',
          outputs: [
            {
              internalType: 'bool',
              name: '',
              type: 'bool'
            }
          ],
          stateMutability: 'view',
          type: 'function'
        },
        {
          inputs: [],
          name: 'symbol',
          outputs: [
            {
              internalType: 'string',
              name: '',
              type: 'string'
            }
          ],
          stateMutability: 'view',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'index',
              type: 'uint256'
            }
          ],
          name: 'tokenByIndex',
          outputs: [
            {
              internalType: 'uint256',
              name: '',
              type: 'uint256'
            }
          ],
          stateMutability: 'view',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'owner',
              type: 'address'
            },
            {
              internalType: 'uint256',
              name: 'index',
              type: 'uint256'
            }
          ],
          name: 'tokenOfOwnerByIndex',
          outputs: [
            {
              internalType: 'uint256',
              name: '',
              type: 'uint256'
            }
          ],
          stateMutability: 'view',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256'
            }
          ],
          name: 'tokenURI',
          outputs: [
            {
              internalType: 'string',
              name: '',
              type: 'string'
            }
          ],
          stateMutability: 'view',
          type: 'function'
        },
        {
          inputs: [],
          name: 'totalSupply',
          outputs: [
            {
              internalType: 'uint256',
              name: '',
              type: 'uint256'
            }
          ],
          stateMutability: 'view',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'from',
              type: 'address'
            },
            {
              internalType: 'address',
              name: 'to',
              type: 'address'
            },
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256'
            }
          ],
          name: 'transferFrom',
          outputs: [],
          stateMutability: 'nonpayable',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'newOwner',
              type: 'address'
            }
          ],
          name: 'transferOwnership',
          outputs: [],
          stateMutability: 'nonpayable',
          type: 'function'
        }
      ],
      inheritedFunctions: {
        accessoryId: 'contracts/interfaces/ISnowman.sol',
        addAccessory: 'contracts/interfaces/ISnowman.sol',
        approve:
          '@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol',
        balanceOf:
          '@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol',
        getAccessories: 'contracts/interfaces/ISnowman.sol',
        getApproved:
          '@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol',
        hasAccessory: 'contracts/interfaces/ISnowman.sol',
        isAccessoryAvailable: 'contracts/interfaces/ISnowman.sol',
        isApprovedForAll:
          '@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol',
        mint: 'contracts/interfaces/ISnowman.sol',
        ownerOf:
          '@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol',
        removeAccessory: 'contracts/interfaces/ISnowman.sol',
        removeAllAccessories: 'contracts/interfaces/ISnowman.sol',
        renderTokenById: 'contracts/interfaces/ISnowman.sol',
        safeTransferFrom:
          '@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol',
        setApprovalForAll:
          '@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol',
        supportsInterface:
          '@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol',
        tokenByIndex:
          '@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol',
        tokenOfOwnerByIndex:
          '@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol',
        tokenURI:
          '@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol',
        totalSupply:
          '@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol',
        transferFrom:
          '@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol',
        name: '@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol',
        symbol:
          '@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol',
        onERC721Received:
          '@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol',
        owner: '@openzeppelin/contracts/access/Ownable.sol',
        renounceOwnership: '@openzeppelin/contracts/access/Ownable.sol',
        transferOwnership: '@openzeppelin/contracts/access/Ownable.sol'
      }
    },
    SnowmanMetadata: {
      address: '0x0Bb9d99f4D1852e913fa5bD7D682abd8c077FBFF',
      abi: [],
      inheritedFunctions: {}
    },
    TokenURIGen: {
      address: '0x9Cc8c3077845A1bA5aF42e30dAa749ab564B6EfD',
      abi: [
        {
          inputs: [
            {
              internalType: 'string',
              name: 'name',
              type: 'string'
            },
            {
              internalType: 'string',
              name: 'description',
              type: 'string'
            },
            {
              internalType: 'string',
              name: 'image',
              type: 'string'
            },
            {
              internalType: 'string',
              name: 'attributes',
              type: 'string'
            }
          ],
          name: 'generateSVGTokenURI',
          outputs: [
            {
              internalType: 'string',
              name: '',
              type: 'string'
            }
          ],
          stateMutability: 'pure',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'string',
              name: 'name',
              type: 'string'
            },
            {
              internalType: 'string',
              name: 'description',
              type: 'string'
            },
            {
              internalType: 'string',
              name: 'external_url',
              type: 'string'
            },
            {
              internalType: 'string',
              name: 'image',
              type: 'string'
            },
            {
              internalType: 'string',
              name: 'attributes',
              type: 'string'
            }
          ],
          name: 'generateSVGTokenURI',
          outputs: [
            {
              internalType: 'string',
              name: '',
              type: 'string'
            }
          ],
          stateMutability: 'pure',
          type: 'function'
        },
        {
          inputs: [
            {
              internalType: 'string',
              name: 'name',
              type: 'string'
            },
            {
              internalType: 'string',
              name: 'description',
              type: 'string'
            },
            {
              internalType: 'string',
              name: 'image',
              type: 'string'
            }
          ],
          name: 'generateSVGTokenURI',
          outputs: [
            {
              internalType: 'string',
              name: '',
              type: 'string'
            }
          ],
          stateMutability: 'pure',
          type: 'function'
        }
      ],
      inheritedFunctions: {}
    }
  }
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
